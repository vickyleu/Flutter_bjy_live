# Uncomment this line to define a global platform for your project
# platform :ios, '9.0'

source 'http://git.baijiashilian.com/open-ios/specs.git'
source 'https://github.com/CocoaPods/Specs.git'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!


  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))


   # 用于动态引入 Framework，避免冲突问题
    script_phase \
    :name => '[BJVideoPlayerCore] Embed Frameworks',
    :script => 'Pods/BJVideoPlayerCore/frameworks/EmbedFrameworks.sh', # for remote BJVideoPlayerBase
    :execution_position => :after_compile
    # 点播回放包括直播 SDK 需要加上
    script_phase \
    :name => '[BJLiveCore] Embed Frameworks',
    :script => 'Pods/BJLiveCore/frameworks/EmbedFrameworks.sh',
    :execution_position => :after_compile
    # 用于清理动态引入的 Framework 用不到的架构，避免发布 AppStore 时发生错误，需要写在动态引入 Framework 的 script 之后
    script_phase \
    :name => '[BJLiveBase] Clear Archs From Frameworks',
    :script => 'Pods/BJLiveBase/script/ClearArchsFromFrameworks.sh "BJHLMediaPlayer.framework" "BJYIJKMediaFramework.framework"',
    :execution_position => :after_compile
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
            target.build_configurations.each do |config|
                    config.build_settings['ENABLE_BITCODE'] = 'NO'
                    config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf'
            end
  end
end
